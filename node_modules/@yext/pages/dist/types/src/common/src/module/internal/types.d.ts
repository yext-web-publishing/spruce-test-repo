import { ModuleConfig, Module, ModuleDefinition } from "../types.js";
/**
 * A domain representation of a widget module. Contains all fields from an imported module as well
 * as metadata about the module used in downstream processing.
 */
export interface ModuleInternal {
    /**
     * The filepath to the module file. This can be the raw TSX file when used during dev mode or
     * the path to the server bundle this module was imported from during prod build.
     */
    path: string;
    /** The name of the file (with extension) */
    filename: string;
    /** The name of the file (without extension) */
    moduleName: string;
    /** The exported config function */
    config: ModuleConfigInternal;
    /** The exported default module function */
    default: Module;
}
/**
 * The exported `config` function's definition.
 */
export interface ModuleConfigInternal {
    /** The name of the module feature. If not defined uses the module filename (without extension) */
    name: string;
}
export declare const convertModuleDefinitionToModuleInternal: (moduleFilepath: string, module: ModuleDefinition) => ModuleInternal;
export declare const convertModuleConfigToModuleConfigInternal: (moduleName: string, moduleConfig: ModuleConfig | undefined) => ModuleConfigInternal;
