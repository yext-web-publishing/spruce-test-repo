import { ViteDevServer } from "vite";
import { ModuleInternal } from "../../../common/src/module/internal/types.js";
import { ProjectStructure } from "../../../common/src/project/structure.js";
export interface ModuleInfo {
    moduleName: string;
    modulePath: string;
    postCssPath: string | undefined;
}
export declare const loadModuleInternal: (devserver: ViteDevServer, moduleFilePath: string) => Promise<ModuleInternal | null>;
/**
 * Finds module info by searching src/modules by module.config.name then by
 * folder name. Returns info for the matching module or undefined if not
 * found.
 *
 * @param searchName
 * @param projectStructure
 * @return moduleInfo
 */
export declare const getModuleInfoFromModuleName: (searchName: string, projectStructure: ProjectStructure) => Promise<ModuleInfo | undefined>;
