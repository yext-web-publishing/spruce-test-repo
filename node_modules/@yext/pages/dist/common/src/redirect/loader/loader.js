import {
  convertRedirectModuleToRedirectModuleInternal
} from "../internal/types.js";
import { loadModules } from "../../loader/vite.js";
const loadRedirectModules = async (redirectModulePaths, transpile, adjustForFingerprintedAsset, projectStructure) => {
  const importedModules = await loadModules(
    redirectModulePaths,
    transpile,
    projectStructure
  );
  const importedRedirectModules = [];
  for (const importedModule of importedModules) {
    const redirectModuleInternal = convertRedirectModuleToRedirectModuleInternal(
      importedModule.path,
      importedModule.module,
      adjustForFingerprintedAsset
    );
    importedRedirectModules.push({
      ...redirectModuleInternal,
      path: importedModule.path
    });
  }
  return importedRedirectModules.reduce((prev, module) => {
    if (prev.has(module.config.name)) {
      throw new Error(
        `Redirects must have unique names. Found multiple redirects with name "${module.config.name}"`
      );
    }
    return prev.set(module.config.name, module);
  }, /* @__PURE__ */ new Map());
};
export {
  loadRedirectModules
};
