import { ProjectStructure } from "../../common/src/project/structure.js";
import { getTemplateFilepaths } from "../../common/src/template/internal/getTemplateFilepaths.js";
import { createTemplatesJson } from "../templates/createTemplatesJson.js";
import { logErrorAndExit } from "../../util/logError.js";
import { getRedirectFilePaths } from "../../common/src/redirect/internal/getRedirectFilepaths.js";
const handler = async ({ scope }) => {
  const projectStructure = await ProjectStructure.init({ scope });
  const templateFilepaths = getTemplateFilepaths(
    projectStructure.getTemplatePaths()
  );
  const redirectFilepaths = getRedirectFilePaths(
    projectStructure.getRedirectPaths()
  );
  try {
    await createTemplatesJson(
      templateFilepaths,
      redirectFilepaths,
      projectStructure,
      "FEATURES"
    );
  } catch (error) {
    logErrorAndExit(error);
  }
};
const featureCommand = (program) => {
  program.command("features").description("Generates features.json file").option("--scope <string>", "The subfolder to scope from").action(handler);
};
export {
  featureCommand
};
