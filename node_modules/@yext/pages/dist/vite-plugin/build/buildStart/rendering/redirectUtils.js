import {
  convertRedirectModuleToRedirectModuleInternal
} from "../../../../common/src/redirect/internal/types.js";
const pathToRedirectModule = /* @__PURE__ */ new Map();
const readRedirectModules = async (feature, manifest, projectStructure) => {
  if (!manifest.redirectPaths[feature]) {
    return;
  }
  const path = manifest.redirectPaths[feature].replace(
    projectStructure.config.subfolders.assets,
    ".."
  );
  let importedModule = pathToRedirectModule.get(path);
  if (!importedModule) {
    importedModule = await import(path);
    pathToRedirectModule.set(path, importedModule);
  }
  return convertRedirectModuleToRedirectModuleInternal(
    path,
    importedModule,
    true
  );
};
const generateRedirectResponses = async (redirectModuleInternal, templateProps) => {
  const destination = redirectModuleInternal.getDestination(templateProps);
  const sources = redirectModuleInternal.getSources(templateProps);
  return {
    sources,
    destination
  };
};
export {
  generateRedirectResponses,
  readRedirectModules
};
