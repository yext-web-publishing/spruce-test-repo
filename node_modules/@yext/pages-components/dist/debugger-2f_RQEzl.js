import { g as B, j as o, c as j } from "./index-DkbfQLjp.js";
import { useState as p, useEffect as k, useRef as T } from "react";
import { createPortal as $ } from "react-dom";
function H() {
  return B().name !== "browser" || window.hasOwnProperty("debuggerInitialized") ? null : (window.debuggerInitialized = !0, $(/* @__PURE__ */ o.jsx(C, {}), document.body));
}
const m = {};
function C() {
  const [e, i] = p(), [s, n] = p([]), [l, a] = p(!1), t = (r) => {
    i(e === r ? void 0 : r);
  };
  return k(() => (document.documentElement.classList.add("xYextDebug"), document.querySelectorAll("[data-ya-scope]").forEach((c) => {
    const d = c.dataset.yaScope, u = c.querySelectorAll("[data-ya-track]");
    u.forEach((g, h) => {
      const b = g.dataset.yaTrack;
      g.addEventListener("mouseenter", () => {
        n([
          {
            eventEl: g,
            eventName: `${d}_${b}`,
            key: `${d}_${b}_${h}`
          }
        ]);
      }), g.addEventListener("mouseleave", () => {
        n([]);
      });
    }), d && (m.hasOwnProperty(d) ? m[d].events = [
      ...m[d].events,
      ...Array.from(u)
    ] : m[d] = {
      scope: c,
      events: Array.from(u)
    });
  }), a(!0), () => {
    document.documentElement.classList.remove("xYextDebug");
  }), []), l ? /* @__PURE__ */ o.jsxs(o.Fragment, { children: [
    /* @__PURE__ */ o.jsxs("div", { className: "analytics-debugger", children: [
      /* @__PURE__ */ o.jsxs("div", { className: "analytics-debugger-toggles", children: [
        /* @__PURE__ */ o.jsx(
          "button",
          {
            className: j("analytics-debugger-toggle", {
              "is-active": e === "Events"
            }),
            onClick: () => t("Events"),
            children: "Events"
          }
        ),
        /* @__PURE__ */ o.jsx(
          "button",
          {
            className: j("analytics-debugger-toggle", {
              "is-active": e === "Scopes"
            }),
            onClick: () => t("Scopes"),
            children: "Scopes"
          }
        )
      ] }),
      e && /* @__PURE__ */ o.jsx("div", { className: "analytics-debugger-tabs", children: e === "Events" ? /* @__PURE__ */ o.jsx(N, { data: m, setTooltips: n }) : /* @__PURE__ */ o.jsx(Y, { data: m, setTooltips: n }) })
    ] }),
    /* @__PURE__ */ o.jsx(R, { tooltips: s })
  ] }) : null;
}
function N(e) {
  const { data: i, setTooltips: s } = e, [n, l] = p(), [a, t] = p(""), r = (c, d, u) => {
    c.scrollIntoView({ behavior: "smooth", block: "nearest" }), n && n.classList.remove("analytics-event-highlight"), l(c), c.classList.add("analytics-event-highlight"), t(u), s([
      {
        eventEl: c,
        eventName: d,
        key: u
      }
    ]);
  };
  return /* @__PURE__ */ o.jsxs("div", { className: "analytics-debugger-tab", children: [
    /* @__PURE__ */ o.jsx("h2", { className: "analytics-debugger-tab-title", children: "Event Names" }),
    /* @__PURE__ */ o.jsx("ul", { className: "analytics-debugger-list", children: Object.entries(i).map(
      ([c, d]) => d.events.map((u, g) => {
        const h = `${c}_${u.dataset.yaTrack}`, b = `${h}_${g}`;
        return /* @__PURE__ */ o.jsx("li", { className: "analytics-debugger-listItem", children: /* @__PURE__ */ o.jsx(
          "button",
          {
            className: j("analytics-debugger-button", {
              "is-active": b === a
            }),
            onClick: () => r(u, h, b),
            children: h
          }
        ) }, b);
      })
    ) })
  ] });
}
function Y(e) {
  const { data: i, setTooltips: s } = e, [n, l] = p(""), a = (t) => {
    const r = i[t];
    r.scope.scrollIntoView({ behavior: "smooth", block: "nearest" }), l(t), s(
      r.events.map((c, d) => ({
        eventEl: c,
        eventName: `${t}_${c.dataset.yaTrack}`,
        key: `${t}_${c.dataset.yaTrack}_${d}`
      }))
    );
  };
  return /* @__PURE__ */ o.jsxs("div", { className: "analytics-debugger-tab", children: [
    /* @__PURE__ */ o.jsx("h2", { className: "analytics-debugger-tab-title", children: "Scope Names" }),
    /* @__PURE__ */ o.jsx("ul", { className: "analytics-debugger-list", children: Object.keys(i).map((t, r) => /* @__PURE__ */ o.jsx("li", { className: "analytics-debugger-listItem", children: /* @__PURE__ */ o.jsx(
      "button",
      {
        className: j("analytics-debugger-button", {
          "is-active": t === n
        }),
        onClick: () => a(t),
        children: t
      }
    ) }, t + r)) })
  ] });
}
function R(e) {
  const i = T({});
  return k(() => {
    if (i.current)
      for (const s of Object.values(i.current)) {
        const n = Object.values(i.current).map((l) => l.el).filter((l) => l !== s.el);
        E(s, n), s.el.style.visibility = "visible";
      }
  }, [e.tooltips]), /* @__PURE__ */ o.jsx(o.Fragment, { children: e.tooltips.map((s) => /* @__PURE__ */ o.jsx(
    "div",
    {
      style: { visibility: "hidden" },
      className: "analytics-debugger-tooltip",
      ref: (n) => {
        n ? i.current[s.key] = {
          el: n,
          tooltip: s
        } : delete i.current[s.key];
      },
      children: /* @__PURE__ */ o.jsx("span", { children: s.eventName })
    },
    s.key
  )) });
}
function E(e, i) {
  for (let s = 0; s < 9; s++) {
    const n = L(
      e.tooltip.eventEl.getBoundingClientRect(),
      e.el,
      s
    );
    if (e.el.style.inset = `${n.top} auto auto ${n.left}`, !!S(
      e.el.getBoundingClientRect().left,
      e.el.getBoundingClientRect().top + window.scrollY,
      e.el.getBoundingClientRect().right,
      e.el.getBoundingClientRect().bottom + window.scrollY
    ))
      continue;
    let a = !0;
    for (let t = 0; t < i.length; t++) {
      const r = i[t];
      A(e.el, r) && (a = !1);
    }
    if (a)
      break;
  }
}
function A(e, i) {
  const s = e.getBoundingClientRect().top + window.scrollY, n = e.getBoundingClientRect().left, l = s + e.clientHeight, a = n + e.clientWidth, t = i.getBoundingClientRect().top + window.scrollY, r = i.getBoundingClientRect().left, c = t + i.clientHeight, d = r + i.clientWidth, u = (g, h, b, f, v, x, y, w) => b <= v && v <= y && f <= x && x <= w || b <= g && g <= y && f <= h && h <= w || b <= g && g <= y && f <= x && x <= w || b <= v && v <= y && f <= h && h <= w;
  return u(n, s, r, t, a, l, d, c) || u(r, t, n, s, d, c, a, l);
}
function S(e, i, s, n) {
  return e < 0 || s > window.innerWidth || i < 0 || n > document.documentElement.scrollHeight;
}
function L(e, i, s) {
  const n = i.clientHeight, l = i.clientWidth;
  let a, t;
  switch (s) {
    case 0: {
      t = window.scrollY + e.top - n + "px", a = e.left - l + "px";
      break;
    }
    case 1: {
      t = window.scrollY + e.top - n + "px", a = e.left + "px";
      break;
    }
    case 2: {
      t = window.scrollY + e.top - n + "px", a = e.right + "px";
      break;
    }
    case 3: {
      t = window.scrollY + e.top - n + "px", a = e.right - l + "px";
      break;
    }
    case 4: {
      t = window.scrollY + e.bottom + "px", a = e.left - l + "px";
      break;
    }
    case 5: {
      t = window.scrollY + e.bottom + "px", a = e.left + "px";
      break;
    }
    case 6: {
      t = window.scrollY + e.bottom + "px", a = e.right - l + "px";
      break;
    }
    case 7: {
      t = window.scrollY + e.bottom + "px", a = e.right + "px";
      break;
    }
    default:
      t = 0, a = 0;
  }
  return {
    top: t,
    left: a
  };
}
export {
  C as AnalyticsDebuggerInternal,
  H as default
};
