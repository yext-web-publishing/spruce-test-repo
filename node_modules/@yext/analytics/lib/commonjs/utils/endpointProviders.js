"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConversionTrackingListingsEndpoint = exports.getConversionTrackingEndpoint = exports.getPagesEndpoint = exports.getSearchEndpoint = exports.getChatEndpoint = void 0;
const EVENT_DOMAINS = {
    US: {
        PRODUCTION: 'https://us.yextevents.com',
        SANDBOX: 'https://sbx.us.yextevents.com',
    },
    EU: {
        PRODUCTION: 'https://eu.yextevents.com',
        SANDBOX: undefined
    }
};
const CONVERSION_TRACKING_DOMAINS = {
    US: {
        PRODUCTION: 'https://realtimeanalytics.yext.com',
        SANDBOX: 'https://sandbox-realtimeanalytics.yext.com',
    },
    EU: {
        PRODUCTION: undefined,
        SANDBOX: undefined
    }
};
function getChatEndpoint(region, environment) {
    const domain = getEventDomain(region, environment);
    return `${domain}/accounts/me/events`;
}
exports.getChatEndpoint = getChatEndpoint;
function getSearchEndpoint(businessId, region, environment, customDomain) {
    const domain = customDomain ? customDomain : getEventDomain(region, environment);
    return `${domain}/realtimeanalytics/data/answers/${businessId}`;
}
exports.getSearchEndpoint = getSearchEndpoint;
function getPagesEndpoint(region, isConversionTrackingEnabled) {
    const domain = isConversionTrackingEnabled
        ? getConversionTrackingDomain(region)
        : getEventDomain(region);
    return `${domain}/store_pagespixel`;
}
exports.getPagesEndpoint = getPagesEndpoint;
function getConversionTrackingEndpoint() {
    const domain = getConversionTrackingDomain('US', 'PRODUCTION');
    return `${domain}/conversiontracking/conversion`;
}
exports.getConversionTrackingEndpoint = getConversionTrackingEndpoint;
function getConversionTrackingListingsEndpoint() {
    const domain = getConversionTrackingDomain('US', 'PRODUCTION');
    return `${domain}/listings`;
}
exports.getConversionTrackingListingsEndpoint = getConversionTrackingListingsEndpoint;
function getConversionTrackingDomain(region, env) {
    return getDomain(CONVERSION_TRACKING_DOMAINS, region, env, true);
}
function getEventDomain(region, env) {
    return getDomain(EVENT_DOMAINS, region, env);
}
function getDomain(domainMap, region = 'US', env = 'PRODUCTION', conversionTrackingEnabled = false) {
    const domain = domainMap[region][env];
    if (!domain) {
        throw Error(`The combination of the environment: "${env}", region: "${region}",`
            + `and conversionTrackingEnabled: "${conversionTrackingEnabled}" is unsupported.`);
    }
    return domain;
}
//# sourceMappingURL=endpointProviders.js.map