import 'isomorphic-fetch';
export function mockHttpRequesterService(body) {
    return {
        post: jest.fn(function () { return Promise.resolve(new Response(JSON.stringify(body))); }),
        get: jest.fn(function () { return Promise.resolve(new Response()); }),
    };
}
export function mockErrorHttpRequesterService(message) {
    return {
        post: jest.fn(function () { return Promise.resolve(new Response(message, { status: 400 })); }),
        get: jest.fn(function () { return Promise.resolve(new Response(message, { status: 400 })); }),
    };
}
//# sourceMappingURL=MockHttpRequesterService.js.map