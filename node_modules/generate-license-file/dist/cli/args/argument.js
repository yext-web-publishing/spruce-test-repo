"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Argument = void 0;
const enquirer_1 = require("enquirer");
class Argument {
    promptForString(question, initialValue) {
        return __awaiter(this, void 0, void 0, function* () {
            const answer = yield enquirer_1.prompt({
                type: "input",
                name: "value",
                initial: initialValue,
                message: question
            });
            return answer.value;
        });
    }
    promptForBoolean(question) {
        return __awaiter(this, void 0, void 0, function* () {
            const answer = yield enquirer_1.prompt({
                type: "confirm",
                name: "value",
                message: question
            });
            return answer.value;
        });
    }
    promptForMultipleChoice(question, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const answer = yield enquirer_1.prompt({
                type: "select",
                name: "value",
                message: question,
                choices: Object.keys(options)
            });
            const selection = answer.value;
            return options[selection];
        });
    }
}
exports.Argument = Argument;
